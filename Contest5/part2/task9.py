'''
Вася играет в настольную игру «Пираты Баренцева моря», которая 
посвящена морским битвам. Игровое поле представляет собой квадрат из 
N×N клеток, на котором расположено N кораблей (каждый корабль занимает
одну клетку).
Вася решил воспользоваться линейной тактикой, для этого ему необходимо
выстроить все N кораблей в одном столбце. За один ход можно передвинуть 
один корабль в одну из четырёх соседних по стороне клеток. Номер столбца, 
в котором будут выстроены корабли, не важен. Определите минимальное
количество ходов, необходимых для построения кораблей в одном столбце.
В начале и процессе игры никакие два корабля не могут находиться 
в одной клетке.
'''

# Функция для нахождения медианы
def find_median(array, n):
    if n % 2 == 0:
        median = (array[n // 2] + array[n // 2 - 1]) / 2
    else:
        median = array[n // 2]

    return median


# Входные данные:
# N - длина стороны квадратного поля и количество кораблей
N = int(input())

# Начальные данные:
moves_count = 0
columns_count = [0] * N
rows_count = [0] * N
indexes_rows_1plus = []

# Алгоритм:
for _ in range(N):
    i, j = list(map(int, input().split()))
    columns_count[j - 1] += 1
    rows_count[i - 1] += 1

    # Cчитаем количество строк, в которых больше одного корабля
    if rows_count[i - 1] > 1:
        indexes_rows_1plus.append(i - 1)

# Жадным алгоритмом выстраиваем по одному кораблю в каждой строке
indexes_rows_1plus.sort()
for row_i in range(N):
    # Если в строке нет кораблей,
    # то перемещаем корабль из ближайшей строки с 2+ кораблями
    if rows_count[row_i] == 0:
        moves_count += abs(indexes_rows_1plus[0] - row_i)
        indexes_rows_1plus.pop(0)


# Создаём список столбцов, в которых есть корабли
columns_with_ships = []
for i in range(N):
    for j in range(columns_count[i]):
        columns_with_ships.append(i + 1)

# Находим медиану столбцов, в которых есть корабли
# Она показывает, в какой столбец можно выстроить корабли оптимально
max_column_index = round(find_median(columns_with_ships, N)) - 1

# Считаем количество ходов для выстраивания кораблей в одном столбце
for col_i in range(N):
    if col_i != max_column_index:
        k = columns_count[col_i]
        if k > 0:
            moves_count += k * abs(col_i - max_column_index)

# Выходные данные:
print(moves_count)
